{"version":3,"file":"static/js/452.92e58bd6.chunk.js","mappings":"oMAKMA,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,K,kBAKNA,EAAsBC,MAAQ,YAI9BD,EAAsBE,KAAO,oBAE7B,IAEMC,EAAoB,WACxB,WAAYC,GAAS,4BACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,eAAgBC,EAAAA,EAAAA,GAAYF,KAAM,gBAAiB,GAKxDA,KAAKG,MAAQ,0BAIbH,KAAKI,aAAe,WAClB,EAAKH,cAAcI,MACpB,CACF,CAfuB,8CAgBxB,WACE,IAAIC,EACJN,KAAKO,OAAiC,QAAvBD,EAAKN,KAAKQ,eAA4B,IAAPF,OAAgB,EAASA,EAAGG,cAAc,aAEpFT,KAAKO,SACFP,KAAKO,OAAOG,IACfV,KAAKO,OAAOI,aAAa,KAAzB,oBAA4Cd,EAAqBe,qBAEnEZ,KAAKQ,QAAQG,aAAa,kBAA1B,UAAgDX,KAAKO,OAAOG,KAE/D,GA1BuB,gCA2BxB,WACEV,KAAKa,iBACN,GA7BuB,oBA8BxB,WACE,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,KAAM,YAAaF,EAAAA,EAAAA,GAAE,QAAS,CAAEG,MAAO,YAAaD,KAAM,iBAAkBF,EAAAA,EAAAA,GAAE,OAAQ,CAAEI,aAAclB,KAAKa,gBAAiBM,KAAMzB,EAAsBC,UAAWmB,EAAAA,EAAAA,GAAE,MAAO,CAAEG,MAAO,4BAA6BH,EAAAA,EAAAA,GAAE,OAAQ,CAAEI,aAAclB,KAAKI,aAAce,KAAMzB,EAAsBE,QAC9S,GAhCuB,mBAkCxB,WAAgB,OAAOwB,EAAAA,EAAAA,GAAWpB,KAAQ,IAlClB,2BAiCxB,WAA8B,OAAO,CAAO,KAjCpB,KAoC1BH,EAAqBe,iBAAmB,EACxCf,EAAqBwB,MAvCW,sK","sources":["../node_modules/@genetec/gelato/dist/esm/gen-combobox-item-group.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-aff8efbc.js';\n\n/**\n * Different types of combobox item group slots.\n */\nclass ComboboxItemGroupSlot {\n}\n/**\n * Describes the name of the group.\n */\nComboboxItemGroupSlot.Label = 'gen-label';\n/**\n * Specifies the text or content of each item within the group.\n */\nComboboxItemGroupSlot.Item = 'gen-combobox-item';\n\nconst genComboboxItemGroupCss = \":host{display:block;outline:none;text-align:start}:host .gen-label ::slotted([slot=gen-label]){padding:calc(var(--gen-spacing-base) * 1.25) var(--gen-spacing-base)}\";\n\nconst GenComboboxItemGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this._itemsChanged = createEvent(this, \"_itemsChanged\", 7);\n    /**\n     * The default slot.\n     * @internal\n     */\n    this._slot = 'gen-combobox-item-group';\n    /**\n     * Handle changes to the item slot.\n     */\n    this.onSlotChange = () => {\n      this._itemsChanged.emit();\n    };\n  }\n  initializeLabel() {\n    var _a;\n    this._label = (_a = this.element) === null || _a === void 0 ? void 0 : _a.querySelector('gen-label');\n    //If a label was added, it's given a unique Id.\n    if (this._label) {\n      if (!this._label.id) {\n        this._label.setAttribute('id', `gen-label-${GenComboboxItemGroup.groupLabelNumber++}`);\n      }\n      this.element.setAttribute('aria-labelledby', `${this._label.id}`);\n    }\n  }\n  componentDidRender() {\n    this.initializeLabel();\n  }\n  render() {\n    return (h(Host, { role: \"listbox\" }, h(\"label\", { class: \"gen-label\", role: \"presentation\" }, h(\"slot\", { onSlotchange: this.initializeLabel, name: ComboboxItemGroupSlot.Label })), h(\"div\", { class: \"gen-combobox-group-list\" }, h(\"slot\", { onSlotchange: this.onSlotChange, name: ComboboxItemGroupSlot.Item }))));\n  }\n  static get delegatesFocus() { return true; }\n  get element() { return getElement(this); }\n};\nGenComboboxItemGroup.groupLabelNumber = 0;\nGenComboboxItemGroup.style = genComboboxItemGroupCss;\n\nexport { GenComboboxItemGroup as gen_combobox_item_group };\n"],"names":["ComboboxItemGroupSlot","Label","Item","GenComboboxItemGroup","hostRef","registerInstance","this","_itemsChanged","createEvent","_slot","onSlotChange","emit","_a","_label","element","querySelector","id","setAttribute","groupLabelNumber","initializeLabel","h","Host","role","class","onSlotchange","name","getElement","style"],"sourceRoot":""}